{"version":3,"file":"plugin.min.js","sources":["../src/plugin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny formatting for Moodle\n *\n * @module     tiny_formatting/plugin\n * @copyright  2024 Andrew Lyons <andrew@nicols.co.uk>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {pluginName} from './common';\n\n// Setup the tiny_formatting Plugin.\nconst configureMenu = (menu) => {\n    window.console.log(`Starting menu management for ${menu.format.items}`);\n    if (menu.format.items.match(/\\bblocks\\b/)) {\n        menu.format.items = menu.format.items.replace(\n            /(\\bblocks\\b)/,\n            ' styles $1 fontfamily fontsize',\n        );\n    } else {\n        menu.format.items = `${menu.format.items} | fontfamily fontsize`;\n    }\n\n    if (menu.format.items.match(/\\blanguage\\b/)) {\n        menu.format.items = menu.format.items.replace(\n            /(\\blanguage\\b)/,\n            ' forecolor backcolor | $1',\n        );\n    } else {\n        menu.format.items = `${menu.format.items} | forecolor backcolor`;\n    }\n    window.console.log(`Finished menu management for ${menu.format.items}`);\n    return menu;\n};\n\n// eslint-disable-next-line no-async-promise-executor\nexport default new Promise(async (resolve) => {\n    resolve([pluginName, {\n        configure: (instanceConfig) => ({\n            menu: configureMenu(instanceConfig.menu),\n        }),\n    }]);\n});\n"],"names":["Promise","async","resolve","pluginName","configure","instanceConfig","menu","window","console","log","format","items","match","replace"],"mappings":"gLAkDe,IAAIA,SAAQC,MAAAA,UACvBC,QAAQ,CAACC,mBAAY,CACjBC,UAAYC,wBACRC,MA3BWA,KA2BSD,eAAeC,KA1B3CC,OAAOC,QAAQC,2CAAoCH,KAAKI,OAAOC,QAC3DL,KAAKI,OAAOC,MAAMC,MAAM,cACxBN,KAAKI,OAAOC,MAAQL,KAAKI,OAAOC,MAAME,QAClC,eACA,kCAGJP,KAAKI,OAAOC,gBAAWL,KAAKI,OAAOC,gCAGnCL,KAAKI,OAAOC,MAAMC,MAAM,gBACxBN,KAAKI,OAAOC,MAAQL,KAAKI,OAAOC,MAAME,QAClC,iBACA,6BAGJP,KAAKI,OAAOC,gBAAWL,KAAKI,OAAOC,gCAEvCJ,OAAOC,QAAQC,2CAAoCH,KAAKI,OAAOC,QACxDL,OApBYA,IAAAA"}