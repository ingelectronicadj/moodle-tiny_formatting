define("tiny_formatting/plugin", ["exports", "./common"], function (_exports, _common) { Object.defineProperty(_exports, "__esModule", { value: !0 }), (_exports.default = void 0); var _default = new Promise(async (resolve) => { resolve([ _common.pluginName, { configure: (instanceConfig) => { return { menu: ((menu = instanceConfig.menu), menu.format.items.match(/\bblocks\b/) ? (menu.format.items = menu.format.items.replace(/(\bblocks\b)/, " styles $1 fontfamily fontsize")) : (menu.format.items = "".concat(menu.format.items, " | fontfamily fontsize")), menu.format.items.match(/\blanguage\b/) ? (menu.format.items = menu.format.items.replace(/(\blanguage\b)/, " forecolor | $1")) : (menu.format.items = "".concat(menu.format.items, " | forecolor")), menu), font_family_formats: 'Verdana=verdana, geneva, sans-serif', font_size_formats: '12pt 14pt 18pt', }; var menu; }, }, ]); }); return (_exports.default = _default), _exports.default; }); 
//# sourceMappingURL=plugin.min.js.map